plugins {
    id 'com.android.application'
    id 'com.android.internal.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def propFile = rootProject.file("./local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(propFile))

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.recipeapp"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "RECIPE_APP_API_TOKEN", localProperties['RECIPE_APP_API_TOKEN'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'

    def app_compat_version = "1.4.0-alpha03"//1.2.0
    implementation "androidx.appcompat:appcompat:$app_compat_version"

    def material = "1.4.0"
    implementation "com.google.android.material:material:$material"

    def constraint_layout = "2.1.0"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"

    def androidx_ui = "1.0.0-alpha07"
    implementation "androidx.ui:ui-tooling:$androidx_ui"
    //implementation "androidx.ui:ui-layout:$androidx_ui"
    //implementation "androidx.ui:ui-material:$androidx_ui"

    //def compose_version = "1.0.0-alpha08"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-beta02"

    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    def compose_nav = "2.4.0-alpha08"
    implementation "androidx.navigation:navigation-compose:$compose_nav"

    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    def hilt_lifecycle_view_model_version = "1.0.0-alpha03"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_view_model_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_lifecycle_view_model_version"

    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    // Skip this if you don't want to use integration libraries or configure Glide.
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    def data_store_version = "1.0.0"
    implementation "androidx.datastore:datastore-preferences:$data_store_version"
    implementation "androidx.datastore:datastore-preferences-core:$data_store_version"

    implementation 'androidx.lifecycle:lifecycle-process:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.1'
}